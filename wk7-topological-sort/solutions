Problem 1
207: Course Schedule

class Solution(object):
    def canFinish(self, numCourses, prerequisites):
        """
        :type numCourses: int
        :type prerequisites: List[List[int]]
        :rtype: bool
        """
        graph = [[] for i in range(numCourses)]
        visit = [ 0 for i in range(numCourses)]
        
        for x, y in prerequisites:
            graph[x].append(y)
        for i in range(numCourses):
            if not self.dfs(i, visit, graph):
                return False
        return True
            
    def dfs(self, i, visit, graph):
        if visit[i] == -1:
            return False
        if visit[i] == 1:
            return True
        visit[i] = -1
        for j in graph[i]:
            if not self.dfs(j, visit, graph):
                return False
        visit[i] = 1
        return True
        

Problem 2
210: Course Schedule II

Problem 3
802: Find Eventual Safe States

Problem 4
329: Longest Increasing Path in a Matrix

Problem 5
269: Alien Dictionary (optional, accessable only to premium users)
